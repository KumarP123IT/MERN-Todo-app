{"ast":null,"code":"var _jsxFileName = \"/home/jabakumar/Pictures/todo project(mern)/todo-frontened/src/Todo.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [editId, setEditId] = useState(-1);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const [editDescription, setEditDescription] = useState(\"\");\n  const apiUrl = \"http://localhost:8000\";\n  const handleSubmit = () => {\n    setError(\"\");\n    if (title.trim() !== '' && description.trim() !== '') {\n      fetch(apiUrl + \"/todos\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      }).then(res => {\n        if (res.ok) {\n          setTodos([...todos, {\n            title,\n            description\n          }]);\n          setMessage(\"Item added Successfully\");\n          setTimeout(() => {\n            setMessage(\"\");\n          }, 3000);\n        } else {\n          setError(\"Unable to create a Todo items\");\n        }\n      }).catch(() => {\n        setError(\"Unable to create a Todo items\");\n      });\n    }\n  };\n  useEffect(() => {\n    getItems();\n  }, []);\n  const getItems = () => {\n    fetch(apiUrl + \"/todos\").then(res => res.json()).then(res => {\n      setTodos(res);\n    });\n  };\n  const handleEdit = item => {\n    setEditId(item._id);\n    setEditTitle(item.title);\n    setEditDescription(item.description);\n  };\n  const handleEditCancel = () => {\n    setEditId(-1);\n  };\n\n  /* const handleUpdate = () => {\n        setError(\"\")\n        if (editTitle.trim() !== '' && editDescription.trim() !== '') {\n           fetch(apiUrl + \"/todos/\"+editId, {\n               method: \"PUT\",\n               headers: {\n                   'Content-Type':'application/json'\n               },\n               body: JSON.stringify({title: editTitle, description: editDescription})\n           }).then((res) => {\n               if (res.ok) {\n                   const updatedTodos = todos.map((item) => {\n                       if (item._id === editId) {\n                           item.title = editTitle;\n                           item.description = editDescription;\n                       }\n                       return item;\n                   })\n                    setTodos(updatedTodos)\n                   setMessage(\"Item updated Successfully\")\n                   setTimeout(() => {\n                       setMessage(\"\");\n                   }, 3000)\n                   \n                   setEditId(-1)\n               } else {\n                   setError(\"Unable to create a Todo items\")\n               }\n           }).catch(() => {\n               setError(\"Unable to create a Todo items\")\n           })\n        }\n   }\n    */\n\n  const handleUpdate = () => {\n    setError(\"\"); // Clear previous errors\n\n    // Ensure both fields are not empty\n    if (editTitle.trim() !== '' && editDescription.trim() !== '') {\n      fetch(apiUrl + \"/todos/\" + editId, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: editTitle,\n          description: editDescription\n        })\n      }).then(res => {\n        if (res.ok) {\n          return res.json(); // Return the response as JSON\n        } else {\n          throw new Error('Network response was not ok');\n        }\n      }).then(updatedTodo => {\n        // Create a new array with updated item\n        const updatedTodos = todos.map(item => {\n          if (item._id === editId) {\n            return {\n              ...item,\n              title: editTitle,\n              description: editDescription\n            }; // Return updated item\n          }\n          return item;\n        });\n        setTodos(updatedTodos);\n        setMessage(\"Item updated successfully\");\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 3000);\n        setEditId(-1); // Reset edit ID\n      }).catch(error => {\n        console.error(\"Update failed:\", error); // Log the error for debugging\n        setError(\"Unable to update the Todo item\");\n      });\n    } else {\n      setError(\"Title and description cannot be empty\"); // Provide a more specific error message for empty fields\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row p-3 bg-success text-light\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo Project with MERN Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Description\",\n          className: \"form-control\",\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: todos.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item  bg-info d-flex justify-content-between align-items-center my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column me-2\",\n            children: editId === -1 || editId !== item._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fw-bold\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group d-flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Title\",\n                  onChange: e => setEditTitle(e.target.value),\n                  value: editTitle,\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Description\",\n                  onChange: e => setEditDescription(e.target.value),\n                  value: editDescription,\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex gap-2\",\n            children: [editId === -1 || editId !== item._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: () => handleEdit(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onChange: handleUpdate,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 126\n            }, this), editId === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: handleEditCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Todo, \"2G6Ad1K1s6/W9HMFMds3v1RfA0A=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","title","setTitle","description","setDescription","todos","setTodos","error","setError","message","setMessage","editId","setEditId","editTitle","setEditTitle","editDescription","setEditDescription","apiUrl","handleSubmit","trim","fetch","method","headers","body","JSON","stringify","then","res","ok","setTimeout","catch","getItems","json","handleEdit","item","_id","handleEditCancel","handleUpdate","Error","updatedTodo","updatedTodos","map","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/jabakumar/Pictures/todo project(mern)/todo-frontened/src/Todo.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport default function Todo() {\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [editId, setEditId] = useState(-1);\n\n    const [editTitle, setEditTitle] = useState(\"\");\n    const [editDescription, setEditDescription] = useState(\"\");\n\n    const apiUrl = \"http://localhost:8000\"\n\n    const handleSubmit = () => {\n        setError(\"\")\n        if (title.trim() !== '' && description.trim() !== '') {\n            fetch(apiUrl + \"/todos\", {\n                method: \"POST\",\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body: JSON.stringify({title, description})\n            }).then((res) => {\n                if (res.ok) {\n                    setTodos([...todos, { title, description }])\n                    setMessage(\"Item added Successfully\")\n                    setTimeout(() => {\n                        setMessage(\"\");\n                    },3000)\n                } else {\n                    setError(\"Unable to create a Todo items\")\n                }\n            }).catch(() => {\n                setError(\"Unable to create a Todo items\")\n            })\n\n        }\n    }\n\n    useEffect(() => {\n        getItems()\n    },[])\n\n    const getItems = () => {\n        fetch(apiUrl + \"/todos\")\n            .then((res) =>  res.json())\n            .then((res) => {\n                setTodos(res)\n        })\n    }\n\n    const handleEdit = (item) => {\n        setEditId(item._id);\n        setEditTitle(item.title);\n        setEditDescription(item.description);\n    }\n\n    const handleEditCancel = () => {\n        setEditId(-1)\n    }\n\n   /* const handleUpdate = () => {\n\n        setError(\"\")\n\n        if (editTitle.trim() !== '' && editDescription.trim() !== '') {\n            fetch(apiUrl + \"/todos/\"+editId, {\n                method: \"PUT\",\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body: JSON.stringify({title: editTitle, description: editDescription})\n            }).then((res) => {\n                if (res.ok) {\n                    const updatedTodos = todos.map((item) => {\n                        if (item._id === editId) {\n                            item.title = editTitle;\n                            item.description = editDescription;\n                        }\n                        return item;\n                    })\n\n                    setTodos(updatedTodos)\n                    setMessage(\"Item updated Successfully\")\n                    setTimeout(() => {\n                        setMessage(\"\");\n                    }, 3000)\n                    \n                    setEditId(-1)\n                } else {\n                    setError(\"Unable to create a Todo items\")\n                }\n            }).catch(() => {\n                setError(\"Unable to create a Todo items\")\n            })\n\n        }\n    }\n\n    */\n    \n\n    const handleUpdate = () => {\n    setError(\"\"); // Clear previous errors\n\n    // Ensure both fields are not empty\n    if (editTitle.trim() !== '' && editDescription.trim() !== '') {\n        fetch(apiUrl + \"/todos/\" + editId, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ title: editTitle, description: editDescription })\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json(); // Return the response as JSON\n            } else {\n                throw new Error('Network response was not ok');\n            }\n        })\n        .then((updatedTodo) => {\n            // Create a new array with updated item\n            const updatedTodos = todos.map((item) => {\n                if (item._id === editId) {\n                    return { ...item, title: editTitle, description: editDescription }; // Return updated item\n                }\n                return item;\n            });\n\n            setTodos(updatedTodos);\n            setMessage(\"Item updated successfully\");\n            setTimeout(() => {\n                setMessage(\"\");\n            }, 3000);\n\n            setEditId(-1); // Reset edit ID\n        })\n        .catch((error) => {\n            console.error(\"Update failed:\", error); // Log the error for debugging\n            setError(\"Unable to update the Todo item\");\n        });\n    } else {\n        setError(\"Title and description cannot be empty\"); // Provide a more specific error message for empty fields\n    }\n};\n\n\n    return <>\n    <div className=\"row p-3 bg-success text-light\">\n        <h1>Todo Project with MERN Stack</h1>\n        </div>\n\n        <div className=\"row\">  \n            <h3>Add Items</h3>\n            {message && <p className=\"text-success\">{message}</p> }\n            <div className=\"form-group d-flex gap-2\">\n                <input placeholder=\"Title\"  type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} className=\"form-control\"/>\n                <input placeholder=\"Description\" className=\"form-control\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n                <button className=\"btn btn-dark\" onClick={handleSubmit}>Submit</button>\n            </div>\n            {error && <p className=\"text-danger\">{error}</p>}\n        </div>\n\n        <div className=\"row mt-3\">\n            <h3>Tasks</h3>\n            <ul className=\"list-group\">\n                {\n                    todos.map((item) =>\n                        <li className=\"list-group-item  bg-info d-flex justify-content-between align-items-center my-2\">\n                            <div className=\"d-flex flex-column me-2\">\n                                {\n                                    editId === -1 || editId !== item._id ? <>\n                                        <span className=\"fw-bold\">{ item.title}</span>\n                                        <span>{ item.description}</span>\n                                    </> : <>\n                                        <div className=\"form-group d-flex gap-2\">\n                                          <input placeholder=\"Title\"  onChange={(e) => setEditTitle(e.target.value)} value={editTitle}  className=\"form-control\" type=\"text\"/>\n                                          <input placeholder=\"Description\"  onChange={(e) => setEditDescription(e.target.value)} value={editDescription} className=\"form-control\" type=\"text\"/>\n                                        </div>  \n                                    </>\n                                }\n                               \n                        </div>\n                        \n                            <div className=\"d-flex gap-2\">\n                                {\n                                    editId === -1 || editId !== item._id ?\n                                        <button className=\"btn btn-warning\" onClick={() => handleEdit(item)}>Edit</button> : <button  className = \"btn btn-warning\" onChange={(handleUpdate)}>Update</button>\n                                }\n                                { editId === -1 ?<button className=\"btn btn-danger\">Delete</button> :\n                                    <button className=\"btn btn-danger\" onClick={handleEditCancel}>Cancel</button>\n                                }\n                        </div>\n                        </li>\n                    )}\n            </ul>\n        </div>\n        </>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}